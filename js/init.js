(() => {
  // ns-hugo:/Users/sourner/Library/Caches/hugo_cache/modules/filecache/modules/pkg/mod/github.com/hbstack/header/modules/theme-toggle@v0.1.20/assets/hb/modules/header-theme-toggle/init/index.ts
  (() => {
    "use strict";
    const THEME_AUTO = "auto";
    const THEME_DARK = "dark";
    const THEME_LIGHT = "light";
    const THEME_KEY = "hb-theme";
    const getPreferredTheme = () => {
      return window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? THEME_DARK : THEME_LIGHT;
    };
    const getTheme = () => {
      const v = localStorage.getItem(THEME_KEY);
      return v ? v : THEME_AUTO;
    };
    const setTheme = (theme2, save = false) => {
      save && localStorage.setItem(THEME_KEY, theme2);
      const value = theme2 === THEME_AUTO ? getPreferredTheme() : theme2;
      document.documentElement.setAttribute("data-bs-theme", value);
      onSet(value);
    };
    const onSet = (theme2) => {
      const event = new CustomEvent("hb:theme", { detail: { theme: theme2 } });
      document.dispatchEvent(event);
    };
    const activeTheme = (theme2) => {
      document.querySelectorAll("[data-bs-theme-value]").forEach((toggle) => {
        if (toggle.getAttribute("data-bs-theme-value") === theme2) {
          toggle.classList.add("active");
        } else {
          toggle.classList.remove("active");
        }
      });
      const newIcon = document.querySelector(`[data-bs-theme-value="${theme2}"] svg`)?.cloneNode(true);
      const oldIcon = document.querySelector(".theme-toggle-icon svg");
      oldIcon?.replaceWith(newIcon);
    };
    const theme = getTheme();
    setTheme(theme);
    window.addEventListener("DOMContentLoaded", () => {
      activeTheme(theme);
      window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
        if (getTheme() !== THEME_AUTO) {
          return;
        }
        setTheme(e.matches ? THEME_DARK : THEME_LIGHT);
      });
      document.querySelectorAll("[data-bs-theme-value]").forEach((toggle) => {
        toggle.addEventListener("click", () => {
          const v = toggle.getAttribute("data-bs-theme-value");
          const theme2 = v ? v : THEME_AUTO;
          setTheme(theme2, true);
          activeTheme(theme2);
        });
      });
    });
  })();
})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibnMtaHVnbzovVXNlcnMvc291cm5lci9MaWJyYXJ5L0NhY2hlcy9odWdvX2NhY2hlL21vZHVsZXMvZmlsZWNhY2hlL21vZHVsZXMvcGtnL21vZC9naXRodWIuY29tL2hic3RhY2svaGVhZGVyL21vZHVsZXMvdGhlbWUtdG9nZ2xlQHYwLjEuMjAvYXNzZXRzL2hiL21vZHVsZXMvaGVhZGVyLXRoZW1lLXRvZ2dsZS9pbml0L2luZGV4LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIoKCkgPT4ge1xuICAgICd1c2Ugc3RyaWN0J1xuXG4gICAgY29uc3QgVEhFTUVfQVVUTyA9ICdhdXRvJ1xuICAgIGNvbnN0IFRIRU1FX0RBUksgPSAnZGFyaydcbiAgICBjb25zdCBUSEVNRV9MSUdIVCA9ICdsaWdodCdcblxuICAgIGNvbnN0IFRIRU1FX0tFWSA9ICdoYi10aGVtZSdcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgc3lzdGVtJ3MgcHJlZmVycmVkIHRoZW1lLlxuICAgICAqIFxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgY29uc3QgZ2V0UHJlZmVycmVkVGhlbWUgPSAoKTogc3RyaW5nID0+IHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5tYXRjaE1lZGlhICYmIHdpbmRvdy5tYXRjaE1lZGlhKCcocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspJykubWF0Y2hlcyA/IFRIRU1FX0RBUksgOiBUSEVNRV9MSUdIVFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBjdXJyZW50IHRoZW1lLlxuICAgICAqIFxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgY29uc3QgZ2V0VGhlbWUgPSAoKTogc3RyaW5nID0+IHtcbiAgICAgICAgY29uc3QgdiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFRIRU1FX0tFWSlcbiAgICAgICAgcmV0dXJuIHYgPyB2IDogVEhFTUVfQVVUT1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgdGhlbWUgd2l0aCB0aGUgZ2l2ZW4gdGhlbWUuXG4gICAgICogXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRoZW1lXG4gICAgICogQHBhcmFtIHtib29sZWFufSBzYXZlIHdoZXRoZXIgdG8gc2F2ZSBpdCB0byBsb2NhbFN0b3JhZ2UuXG4gICAgICovXG4gICAgY29uc3Qgc2V0VGhlbWUgPSAodGhlbWU6IHN0cmluZywgc2F2ZSA9IGZhbHNlKSA9PiB7XG4gICAgICAgIHNhdmUgJiYgbG9jYWxTdG9yYWdlLnNldEl0ZW0oVEhFTUVfS0VZLCB0aGVtZSlcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGVtZSA9PT0gVEhFTUVfQVVUTyA/IGdldFByZWZlcnJlZFRoZW1lKCkgOiB0aGVtZVxuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLWJzLXRoZW1lJywgdmFsdWUpXG4gICAgICAgIG9uU2V0KHZhbHVlKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEVtaXRzIGEgY3VzdG9tIGV2ZW50IG9uIHRoZW1lIGNoYW5nZS5cbiAgICAgKiBcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGhlbWUgXG4gICAgICovXG4gICAgY29uc3Qgb25TZXQgPSAodGhlbWUpID0+IHtcbiAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ2hiOnRoZW1lJywgeyBkZXRhaWw6IHsgdGhlbWU6IHRoZW1lIH0gfSk7XG4gICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFjdGl2ZSBjdXJyZW50IHRoZW1lJ3MgaWNvbi5cbiAgICAgKiBcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGhlbWUgXG4gICAgICovXG4gICAgY29uc3QgYWN0aXZlVGhlbWUgPSAodGhlbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1icy10aGVtZS12YWx1ZV0nKS5mb3JFYWNoKCh0b2dnbGUpID0+IHtcbiAgICAgICAgICAgIGlmICh0b2dnbGUuZ2V0QXR0cmlidXRlKCdkYXRhLWJzLXRoZW1lLXZhbHVlJykgPT09IHRoZW1lKSB7XG4gICAgICAgICAgICAgICAgdG9nZ2xlLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRvZ2dsZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGNvbnN0IG5ld0ljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbZGF0YS1icy10aGVtZS12YWx1ZT1cIiR7dGhlbWV9XCJdIHN2Z2ApPy5jbG9uZU5vZGUodHJ1ZSkgYXMgSFRNTEVsZW1lbnRcbiAgICAgICAgY29uc3Qgb2xkSWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aGVtZS10b2dnbGUtaWNvbiBzdmcnKVxuICAgICAgICBvbGRJY29uPy5yZXBsYWNlV2l0aChuZXdJY29uKVxuICAgIH1cblxuICAgIGNvbnN0IHRoZW1lID0gZ2V0VGhlbWUoKVxuICAgIC8vIFNldCB0aGUgZGF0YSBhdHRyaWJ1dGUgQVNBUCwgaW4gb3JkZXIgdG8gYXZvaWQgZmxpY2tlcmluZy5cbiAgICBzZXRUaGVtZSh0aGVtZSlcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgICAgICAvLyBBY3RpdmUgdGhlIHRoZW1lJ3MgaWNvbiBvbiBwYWdlIGxvYWQuXG4gICAgICAgIGFjdGl2ZVRoZW1lKHRoZW1lKVxuXG4gICAgICAgIHdpbmRvdy5tYXRjaE1lZGlhKCcocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspJykuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHtcbiAgICAgICAgICAgIGlmIChnZXRUaGVtZSgpICE9PSBUSEVNRV9BVVRPKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIERPIE5PVCBzYXZlIHRoZSB0aGVtZS5cbiAgICAgICAgICAgIHNldFRoZW1lKGUubWF0Y2hlcyA/IFRIRU1FX0RBUksgOiBUSEVNRV9MSUdIVClcbiAgICAgICAgfSlcblxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1icy10aGVtZS12YWx1ZV0nKVxuICAgICAgICAgICAgLmZvckVhY2godG9nZ2xlID0+IHtcbiAgICAgICAgICAgICAgICB0b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHYgPSB0b2dnbGUuZ2V0QXR0cmlidXRlKCdkYXRhLWJzLXRoZW1lLXZhbHVlJylcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGhlbWUgPSB2ID8gdiA6IFRIRU1FX0FVVE9cbiAgICAgICAgICAgICAgICAgICAgc2V0VGhlbWUodGhlbWUsIHRydWUpXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVRoZW1lKHRoZW1lKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgIH0pXG59KSgpXG4iXSwKICAibWFwcGluZ3MiOiAiOztBQUFBLEdBQUMsTUFBTTtBQUNIO0FBRUEsVUFBTSxhQUFhO0FBQ25CLFVBQU0sYUFBYTtBQUNuQixVQUFNLGNBQWM7QUFFcEIsVUFBTSxZQUFZO0FBT2xCLFVBQU0sb0JBQW9CLE1BQWM7QUFDcEMsYUFBTyxPQUFPLGNBQWMsT0FBTyxXQUFXLDhCQUE4QixFQUFFLFVBQVUsYUFBYTtBQUFBLElBQ3pHO0FBT0EsVUFBTSxXQUFXLE1BQWM7QUFDM0IsWUFBTSxJQUFJLGFBQWEsUUFBUSxTQUFTO0FBQ3hDLGFBQU8sSUFBSSxJQUFJO0FBQUEsSUFDbkI7QUFRQSxVQUFNLFdBQVcsQ0FBQ0EsUUFBZSxPQUFPLFVBQVU7QUFDOUMsY0FBUSxhQUFhLFFBQVEsV0FBV0EsTUFBSztBQUM3QyxZQUFNLFFBQVFBLFdBQVUsYUFBYSxrQkFBa0IsSUFBSUE7QUFDM0QsZUFBUyxnQkFBZ0IsYUFBYSxpQkFBaUIsS0FBSztBQUM1RCxZQUFNLEtBQUs7QUFBQSxJQUNmO0FBT0EsVUFBTSxRQUFRLENBQUNBLFdBQVU7QUFDckIsWUFBTSxRQUFRLElBQUksWUFBWSxZQUFZLEVBQUUsUUFBUSxFQUFFLE9BQU9BLE9BQU0sRUFBRSxDQUFDO0FBQ3RFLGVBQVMsY0FBYyxLQUFLO0FBQUEsSUFDaEM7QUFPQSxVQUFNLGNBQWMsQ0FBQ0EsV0FBa0I7QUFDbkMsZUFBUyxpQkFBaUIsdUJBQXVCLEVBQUUsUUFBUSxDQUFDLFdBQVc7QUFDbkUsWUFBSSxPQUFPLGFBQWEscUJBQXFCLE1BQU1BLFFBQU87QUFDdEQsaUJBQU8sVUFBVSxJQUFJLFFBQVE7QUFBQSxRQUNqQyxPQUFPO0FBQ0gsaUJBQU8sVUFBVSxPQUFPLFFBQVE7QUFBQSxRQUNwQztBQUFBLE1BQ0osQ0FBQztBQUVELFlBQU0sVUFBVSxTQUFTLGNBQWMseUJBQXlCQSxNQUFLLFFBQVEsR0FBRyxVQUFVLElBQUk7QUFDOUYsWUFBTSxVQUFVLFNBQVMsY0FBYyx3QkFBd0I7QUFDL0QsZUFBUyxZQUFZLE9BQU87QUFBQSxJQUNoQztBQUVBLFVBQU0sUUFBUSxTQUFTO0FBRXZCLGFBQVMsS0FBSztBQUVkLFdBQU8saUJBQWlCLG9CQUFvQixNQUFNO0FBRTlDLGtCQUFZLEtBQUs7QUFFakIsYUFBTyxXQUFXLDhCQUE4QixFQUFFLGlCQUFpQixVQUFVLENBQUMsTUFBTTtBQUNoRixZQUFJLFNBQVMsTUFBTSxZQUFZO0FBQzNCO0FBQUEsUUFDSjtBQUdBLGlCQUFTLEVBQUUsVUFBVSxhQUFhLFdBQVc7QUFBQSxNQUNqRCxDQUFDO0FBRUQsZUFBUyxpQkFBaUIsdUJBQXVCLEVBQzVDLFFBQVEsWUFBVTtBQUNmLGVBQU8saUJBQWlCLFNBQVMsTUFBTTtBQUNuQyxnQkFBTSxJQUFJLE9BQU8sYUFBYSxxQkFBcUI7QUFDbkQsZ0JBQU1BLFNBQVEsSUFBSSxJQUFJO0FBQ3RCLG1CQUFTQSxRQUFPLElBQUk7QUFDcEIsc0JBQVlBLE1BQUs7QUFBQSxRQUNyQixDQUFDO0FBQUEsTUFDTCxDQUFDO0FBQUEsSUFDVCxDQUFDO0FBQUEsRUFDTCxHQUFHOyIsCiAgIm5hbWVzIjogWyJ0aGVtZSJdCn0K
