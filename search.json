[{"date":1704685651,"headings":[],"kind":"home","lang":"en","summary":"","title":"","url":"/","year":"2024"},{"categories":["站点内容"],"date":1704685651,"headings":[{"anchor":"bilibili测试","title":"Bilibili测试"},{"anchor":"图标更新","title":"图标更新"},{"anchor":"提示段代码测试","title":"提示段代码测试"},{"anchor":"更新内容","title":"更新内容"},{"anchor":"歌单分享","title":"歌单分享"},{"anchor":"视频短代码调试","title":"视频短代码调试"},{"anchor":"评论系统更新","title":"评论系统更新"}],"kind":"page","lang":"en","summary":"更新内容 放弃Waline开始拥抱Twkioo,因为之前用Waline总是会有莫名其妙无法访问和评论的问题。 基于主题内容采用了扩展的模块化 HugoMods: 目前全部基于HugoMods 支持了Extended Shortcodes 支持了CodePen 支持各种Alert Shortcodes 支持EMO云(网易云)短代码了,终于可以和你们分享我的歌单了 提示段代码测试 Hi 你好 当你看到这段内容为绿色并且有相应样式的时候，证明你的段代码测试是成功的。 歌单分享 图标更新 本站已经开启支持BootStrap、MDI图标\nMaterial Design Icons 评论系统更新 Twkioo 已经不用Waline了所以导致以前的Waline评论数据丢失,目前拥抱Twkioo后某些帖子没评论属于正常内容 视频短代码调试 Bilibili测试 ","title":"2024年站点更新内容通知","url":"/bulletin/2024/0108/","year":"2024"},{"date":1704685651,"headings":[],"kind":"section","lang":"en","summary":"","title":"Bulletins","url":"/bulletin/","year":"2024"},{"date":1704685651,"headings":[],"kind":"taxonomy","lang":"en","summary":"","title":"Categories","url":"/categories/","year":"2024"},{"date":1704685651,"headings":[],"kind":"term","lang":"en","summary":"","title":"站点内容","url":"/categories/%E7%AB%99%E7%82%B9%E5%86%85%E5%AE%B9/","year":"2024"},{"date":1701993600,"headings":[],"kind":"term","lang":"en","summary":"","title":"kubernetes","url":"/tags/kubernetes/","year":"2023"},{"date":1701993600,"headings":[],"kind":"term","lang":"en","summary":"","title":"kubernetes","url":"/categories/kubernetes/","year":"2023"},{"categories":["kubernetes"],"date":1701993600,"headings":[{"anchor":"关于保留指定标签的问题","title":"关于保留指定标签的问题"},{"anchor":"准备安装elastic集群","title":"准备安装Elastic集群"},{"anchor":"准备生成证书文件","title":"准备生成证书文件"},{"anchor":"安装-elasticsearch-集群","title":"安装 Elasticsearch 集群"},{"anchor":"安装kibana","title":"安装Kibana"},{"anchor":"工作原理","title":"工作原理"},{"anchor":"开始部署fluentd","title":"开始部署Fluentd"},{"anchor":"日志源配置","title":"日志源配置"},{"anchor":"环境准备","title":"环境准备"},{"anchor":"路由设置","title":"路由设置"},{"anchor":"过滤","title":"过滤"},{"anchor":"部署fluentd","title":"部署Fluentd"}],"kind":"page","lang":"en","summary":"Kubernetes 中比较流行的日志收集解决方案是 Elasticsearch、Fluentd 和 Kibana（EFK）技术栈，也是官方现在比较推荐的一种方案。\nElasticsearch 是一个实时的、分布式的可扩展的搜索引擎，允许进行全文、结构化搜索，它通常用于索引和搜索大量日志数据，也可用于搜索许多不同类型的文档。\nElasticsearch 通常与 Kibana 一起部署，Kibana 是 Elasticsearch 的一个功能强大的数据可视化 Dashboard，Kibana 允许你通过 web 界面来浏览Elasticsearch 日志数据。\nFluentd是一个流行的开源数据收集器，我们将在 Kubernetes 集群节点上安装 Fluentd，通过获取容器日志文件、过滤和转换日志数据，然后将数据传递到 Elasticsearch 集群，在该集群中对其进行索引和存储。\n我们先来配置启动一个可扩展的 Elasticsearch 集群，然后在 Kubernetes 集群中创建一个 Kibana 应用，最后通过 DaemonSet 来运行 Fluentd，以便它在每个 Kubernetes 工作节点上都可以运行一个 Pod。\n安装 Elasticsearch 集群 先创建一个命名空间，我们将在其中安装所有日志相关的资源对象。\n1kubectl create ns kube-logging 环境准备 ElasticSearch 安装有最低安装要求，如果安装后 Pod 无法正常启动，请检查是否符合最低要求的配置，要求如下：\n节点 CPU最低要求 内存最低要求 elasticsearch-master 核心数\u003e2 内存\u003e2G elasticsearch-data 核心数\u003e1 内存\u003e2G elasticsearch-client 核心数\u003e1 内存\u003e2G 集群节点信息\n集群 节点类型 副本数目 存储大小 网络模式 描述 elasticsearch master 3 5Gi ClusterIP 主节点 elasticsearch-data data 3 50Gi ClusterIP 数据节点 elasticsearch-client client 2 无 NodePort 负责处理用户请求 建议使用 StorageClass 来做持久化存储，当然如果你是线上环境建议使用 Local PV 或者 Ceph RBD 之类的存储来持久化 Elasticsearch 的数据。","tags":["kubernetes"],"title":"kubernetes基于EFK的日志落地实现","url":"/posts/kubernetes-efk/","year":"2023"},{"date":1701993600,"headings":[],"kind":"section","lang":"en","summary":"","title":"Posts","url":"/posts/","year":"2023"},{"date":1701993600,"headings":[],"kind":"taxonomy","lang":"en","summary":"","title":"Tags","url":"/tags/","year":"2023"},{"date":1700697600,"headings":[],"kind":"term","lang":"en","summary":"","title":"四川","url":"/tags/%E5%9B%9B%E5%B7%9D/","year":"2023"},{"date":1700697600,"headings":[],"kind":"term","lang":"en","summary":"","title":"旅行日记","url":"/categories/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/","year":"2023"},{"categories":["旅行日记"],"date":1700697600,"headings":[{"anchor":"出发","title":"出发"},{"anchor":"第一天行程","title":"第一天行程"},{"anchor":"第二天行程","title":"第二天行程"}],"kind":"page","lang":"en","summary":"人生总要去一趟远方吧 下一站行程 暂定西藏🚄\n实在是不想上班，我承认我被我强大的意念占领了，我没忍住。请假直接从北京去了阿坝甘孜。\n好了不开玩笑了哈哈哈\n起初我们打算自驾，奈何我是个小趴菜，先不说阿坝那边的路况好不好走，就平时开个市区我都费劲，所以这条直接被我PASS了。\n所以选择了最最最方便的飞机✈️出行,您还别说这交通工具有两把刷子(不好意思，我真是第一次坐飞机),其实坐飞机大家想得那么复杂 基本流程其实就如下几点\n买票: 不买票想吃霸王机🤪 取票：如果你需要报销什么的其实可以去对应的航空公司柜台去取登机牌,如果个人出行的话可以直接使用电子登机牌进行相关的登机操作 安检: 取完票之后就差不多要安检了,基本上安检也就是十分钟左右的事情,安检完成就正常进入候机楼找你飞机所对应的登机窗口就👌🏻 出发 一大早的我都来机场等着了，因为第一次看网上说要提前2小时到机场，我到了以后发现其实好像也并没有那么夸张 说说我这次准备的东西吧\n衣服方面衣🧣: 个人建议还是羽绒服+冲锋衣起步,带好围脖、围巾、手套、雪地靴等物品，因为那边其实还是很冷的，因为我在雪山上。 物品方面：我是个男孩子其实没有女生带的那么多物品，基本的换洗袜子一件外衣和一件裤子足够,然后就是准备摄影的东西，带着我年迈的SONY A6000和它的两个可拆卸镜头哈哈哈，氧气瓶务必准备充足,个人玩家一般情况下来说3瓶子足矣。团队玩家建议团购(保命的东西啊)。 药物方面：相关方面的药物尽量还是要带上的比如什么肠胃药、感冒药、咳嗽发烧药等等。有人说去高海拔地区要提前吃什么红景天之类的东西，只能说这个东西是因人而异的吧。 证件信息：身份证、护照、还有手机啥的这些东西老铁们应该忘不了吧。 我们买的是早上7.15的机票，大概提前一个半小时就到了机场，其实相对于来说还是挺早的，哎呀不说啦激动地我是一页都没睡。 我的行程大概就是在淘宝订了一个小团，价格是1340，行程是两天。大概的路线就是毕棚沟+达古冰川。 具体行程下面介绍哈哈哈\n看看大兴机场 登机了，耳机里直接走起经济舱的BGM\n46A我靠窗边坐下\nrapper坐经济舱面子伤不伤 第一天行程 我报的是一个2-6人的小团，基本上人都是满的，大概7.00到7.30左右司机哥会上门接人，然后出发前往毕棚沟景区, 因为第一天的早中晚都是自理饭费，哥几个直接干脆路上找了个饭店一起AA的吃了一顿。 毕棚沟这个地方还挺难上的，司机给我们带到半山腰上,半山腰会有一个旅客服务大厅，在大厅外还需要再等大巴车把你们统统都带走！！！\n看看图吧 这水实在是冰的不行啊兄弟们 其实还是挺喜欢这种感觉的,在高海拔地区一定要慢慢的走，尽量不要去奔跑跳跃，因为部分人群很容易因此而高反。 一天了也玩儿累了，吃吃喝喝当时也准备睡觉了 顺带提一嘴：关于高反这个事情我好想没有太大的反应，因为只是单纯的感觉走路比平时喘的更快了，平时走十步喘一口，在这儿可能走五步就需要喘一口。 另外我带的氧气在毕棚沟还没用上，所以提醒一下大家去高海拔地区量力而行。\n第二天行程 后续的行程因为住宿的地方在海拔三千米以上，我的天那叫一个真的冷，我们进了酒店 赶紧把所有能取暖的东西全部Open了。就这样度过了这一天。\n第二天一早要吃过早饭以后从羊茸哈德前往黑水县，大概也就半个小时左右的路程，因为达古冰川在黑水县境内 海拔大概5000米最高，冬天其实比较适合一些攀冰等极限运动(普通人请别作死啊啊啊)。\n老样子依旧是给你扔到半山腰，这一次到不是像上一次一样去做大巴了，这次是直接在半山腰坐缆车上山。我寻思呢这要是让我爬上去我得爬到什么时候哈哈哈 我们去的时候人特别多，缆车排队时间挺长的大概在1小时到两个小时之间左右的这个区间。因为从山下到山上坐缆车还需要15-20分钟左右。\nPS: 中国机长那个飞跃雪山🏔就是在这里拍摄的 其实到这里呢我们也就连夜回到了成都住了一夜，然后找个酒店住了一晚，第二天一早赶回了北京。\n这一次旅行对于我来说挺震撼的，第一次去这么远的地方，也是第一次去这么放松的地方,很那定义我真正拥有过什么，于是昏沉当中这一年又要过去啦。\n下一次的旅途打算为期7天的西藏,坐上绿皮火车。希望尽快提上日程吧。生活加油,工作加油❤️。","tags":["日记","四川"],"title":"旅行日记-四川·阿坝甘孜藏族自治州","url":"/posts/%E5%B7%9D%E8%A5%BF%E4%B9%8B%E6%97%85/","year":"2023"},{"date":1700697600,"headings":[],"kind":"term","lang":"en","summary":"","title":"日记","url":"/tags/%E6%97%A5%E8%AE%B0/","year":"2023"},{"categories":["kubernetes"],"date":1699315200,"headings":[{"anchor":"kubernes组件","title":"kubernes组件"},{"anchor":"kubernetes中pod的通信","title":"kubernetes中Pod的通信"},{"anchor":"kubernetes核心概念","title":"kubernetes核心概念"},{"anchor":"kubernetes的service通信","title":"kubernetes的Service通信"},{"anchor":"kubernetes设计理念","title":"kubernetes设计理念"},{"anchor":"kubernets的资源提交","title":"kubernets的资源提交"},{"anchor":"service类型","title":"Service类型"},{"anchor":"为什么需要kubernetes","title":"为什么需要kubernetes？"},{"anchor":"创建资源的工作流程","title":"创建资源的工作流程"},{"anchor":"服务发现原理和应用","title":"服务发现原理和应用"},{"anchor":"服务发现和流量路由","title":"服务发现和流量路由"}],"kind":"page","lang":"en","summary":"主要讲解kubernetes的组成和组件的具体作用","tags":["kubernetes"],"title":"Kubernetes的架构设计和对象属性基本理解","url":"/posts/kubernetes%E7%9A%84%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/","year":"2023"},{"date":1693008000,"headings":[],"kind":"term","lang":"en","summary":"","title":"Gin","url":"/tags/gin/","year":"2023"},{"date":1693008000,"headings":[],"kind":"term","lang":"en","summary":"","title":"Go","url":"/tags/go/","year":"2023"},{"date":1693008000,"headings":[],"kind":"term","lang":"en","summary":"","title":"个人项目","url":"/tags/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/","year":"2023"},{"date":1693008000,"headings":[],"kind":"term","lang":"en","summary":"","title":"个人项目","url":"/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/","year":"2023"},{"categories":["个人项目"],"date":1693008000,"headings":[{"anchor":"minio启动命令","title":"Minio启动命令"},{"anchor":"restful-api","title":"RESTFul API"},{"anchor":"介绍","title":"介绍"},{"anchor":"后端服务编译","title":"后端服务编译"},{"anchor":"基本的后端技术栈","title":"基本的后端技术栈"},{"anchor":"审核服务","title":"审核服务"},{"anchor":"常用代码片段","title":"常用代码片段"},{"anchor":"接口统计","title":"接口统计"},{"anchor":"用户服务普通用户","title":"用户服务(普通用户)"},{"anchor":"画板服务","title":"画板服务"},{"anchor":"简单功能","title":"简单功能"},{"anchor":"缓存信息","title":"缓存信息"},{"anchor":"通信服务","title":"通信服务"},{"anchor":"项目目录","title":"项目目录"},{"anchor":"项目缓存规范","title":"项目缓存规范"}],"kind":"page","lang":"en","summary":"一个基于Gin框架小项目","tags":["Go","Gin","个人项目"],"title":"维扣-专属你的拍照摄影社区","url":"/posts/wecho/","year":"2023"},{"date":1691625600,"headings":[],"kind":"term","lang":"en","summary":"","title":"API","url":"/tags/api/","year":"2023"},{"date":1691625600,"headings":[],"kind":"term","lang":"en","summary":"","title":"工具分享","url":"/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/","year":"2023"},{"categories":["工具分享"],"date":1691625600,"headings":[{"anchor":"eolinker","title":"eolinker"},{"anchor":"showdoc","title":"ShowDoc"},{"anchor":"swagger","title":"Swagger"}],"kind":"page","lang":"en","summary":"互联网服务发展至今，作为开发者阵营的我们，已经用实践证明了**前后端分离**开发模式正在逐渐成为越来越多互联网公司构建服务和应用的方式。 ","tags":["API"],"title":"推荐几款好用的API文档管理工具","url":"/posts/api/","year":"2023"},{"date":1691625600,"headings":[],"kind":"term","lang":"en","summary":"","title":"日记","url":"/categories/%E6%97%A5%E8%AE%B0/","year":"2023"},{"date":1691625600,"headings":[],"kind":"term","lang":"en","summary":"","title":"纪录片","url":"/tags/%E7%BA%AA%E5%BD%95%E7%89%87/","year":"2023"},{"categories":["日记"],"date":1691625600,"headings":[{"anchor":"我应如何爱你","title":"我应如何爱你"},{"anchor":"漫长的告别","title":"漫长的告别"},{"anchor":"请记住我","title":"请记住我"}],"kind":"page","lang":"en","summary":"本主题内容题材取自bilibili-人生第一次(告别)","tags":["纪录片"],"title":"纪录片-人生第一次-告别","url":"/posts/%E4%BA%BA%E7%94%9F%E7%AC%AC%E4%B8%80%E6%AC%A1/","year":"2023"},{"categories":["kubernetes"],"date":1684022400,"headings":[{"anchor":"openebs-local-pv","title":"OpenEBS Local Pv"},{"anchor":"openebs存储使用","title":"OpenEBS存储使用"},{"anchor":"修改openebs的hostpath默认存储","title":"修改OpenEBS的HostPath默认存储"},{"anchor":"启用openebs","title":"启用OpenEBS"},{"anchor":"安装openebs","title":"安装OpenEBS"},{"anchor":"控制平面","title":"控制平面"},{"anchor":"节点磁盘管理器ndm","title":"节点磁盘管理器(NDM)"}],"kind":"page","lang":"en","summary":"OpenEBS存储使用 OpenEBS 是一种模拟了 AWS 的 EBS、阿里云的云盘等块存储实现的基于容器的存储开源软件。OpenEBS 是一种基于 CAS(Container Attached Storage) 理念的容器解决方案，其核心理念是存储和应用一样采用微服务架构，并通过 Kubernetes 来做资源编排。其架构实现上，每个卷的 Controller 都是一个单独的 Pod，且与应用 Pod 在同一个节点，卷的数据使用多个 Pod 进行管理。\nOpenEBS 有很多组件，可以分为以下几类：\n控制平面组件 - 管理 OpenEBS 卷容器，通常会用到容器编排软件的功能 数据平面组件 - 为应用程序提供数据存储，包含 Jiva 和 cStor 两个存储后端 节点磁盘管理器 - 发现、监控和管理连接到 Kubernetes 节点的媒体 与云原生工具的整合 - 与 Prometheus、Grafana、Fluentd 和 Jaeger 进行整合。 控制平面 OpenEBS 上下文中的控制平面是指部署在集群中的一组工具或组件，它们负责：\n管理 kubernetes 工作节点上可用的存储 配置和管理数据引擎 与 CSI 接口以管理卷的生命周期 与 CSI 和其他工具进行接口，执行快照、克隆、调整大小、备份、恢复等操作。 集成到其他工具中，如 Prometheus/Grafana 以进行遥测和监控 集成到其他工具中进行调试、故障排除或日志管理 OpenEBS 控制平面由一组微服务组成，这些微服务本身由 Kubernetes 管理，使 OpenEBS 真正成为 Kubernetes 原生的。由 OpenEBS 控制平面管理的配置被保存为 Kubernetes 自定义资源。控制平面的功能可以分解为以下各个阶段：","tags":["kubernetes"],"title":"OpenEBS存储的使用","url":"/posts/openebs/","year":"2023"},{"date":1680825600,"headings":[],"kind":"term","lang":"en","summary":"","title":"traefik","url":"/tags/traefik/","year":"2023"},{"categories":["kubernetes"],"date":1680825600,"headings":[{"anchor":"acme自动签发","title":"ACME自动签发"},{"anchor":"traefik-pilot","title":"Traefik Pilot"},{"anchor":"traefik的基本使用","title":"Traefik的基本使用"},{"anchor":"traekfik是什么","title":"Traekfik是什么"},{"anchor":"中间件","title":"中间件"},{"anchor":"代理tcpudp","title":"代理Tcp/Udp"},{"anchor":"代理一个udp服务","title":"代理一个Udp服务"},{"anchor":"使用特定的域名进行代理访问","title":"使用特定的域名进行代理访问"},{"anchor":"创建用于-dashboard-访问的-ingressroute-资源","title":"创建用于 Dashboard 访问的 IngressRoute 资源"},{"anchor":"基于权重的轮询","title":"基于权重的轮询"},{"anchor":"强制跳转https","title":"强制跳转Https"},{"anchor":"流量复制","title":"流量复制"},{"anchor":"灰度发布","title":"灰度发布"},{"anchor":"自动服务发现","title":"自动服务发现"},{"anchor":"自定义一个ingressroute","title":"自定义一个IngressRoute"},{"anchor":"边缘路由器","title":"边缘路由器"},{"anchor":"部署traefik","title":"部署Traefik"}],"kind":"page","lang":"en","summary":"Traekfik是什么 Traefik 是一种开源 边缘路由器，它使您发布服务成为一种有趣而轻松的体验。它代表您的系统接收请求并找出哪些组件负责处理它们。\nTraefik 的与众不同之处在于，除了它的许多功能之外，它还可以自动为您的服务发现正确的配置。当 Traefik 检查您的基础架构时，奇迹就会发生，它会在其中找到相关信息并发现哪个服务服务于哪个请求。\nTraefik 原生兼容所有主要的集群技术，例如 Kubernetes、Docker、Docker Swarm、AWS、Mesos、Marathon，等等；并且可以同时处理很多。（它甚至适用于在裸机上运行的遗留软件。）\n使用 Traefik，无需维护和同步单独的配置文件：一切都自动实时发生（无需重启，无连接中断）。使用 Traefik，您可以花时间为系统开发和部署新功能，而不是配置和维护其工作状态。\n边缘路由器 Traefik 是一个Edge Router，这意味着它是您平台的大门，它拦截并路由每个传入请求：它知道确定哪些服务处理哪些请求的所有逻辑和每条规则（基于path，host，标头，等等…）。\n自动服务发现 传统上边缘路由器（或反向代理）需要一个配置文件，其中包含到您的服务的每条可能路径，Traefik 从服务本身获取它们。部署您的服务，您附加信息告诉 Traefik 服务可以处理的请求的特征。\n首先，当启动 Traefik 时，需要定义 entrypoints（入口点），然后，根据连接到这些 entrypoints 的路由来分析传入的请求，来查看他们是否与一组规则相匹配，如果匹配，则路由可能会将请求通过一系列中间件转换过后再转发到你的服务上去。在了解 Traefik 之前有几个核心概念我们必须要了解：\nProviders 用来自动发现平台上的服务，可以是编排工具、容器引擎或者 key-value 存储等，比如 Docker、Kubernetes、File Entrypoints 监听传入的流量（端口等…），是网络入口点，它们定义了接收请求的端口（HTTP 或者 TCP）。 Routers 分析请求（host, path, headers, SSL, …），负责将传入请求连接到可以处理这些请求的服务上去。 Services 将请求转发给你的应用（load balancing, …），负责配置如何获取最终将处理传入请求的实际服务。 Middlewares 中间件，用来修改请求或者根据请求来做出一些判断（authentication, rate limiting, headers, …），中间件被附件到路由上，是一种在请求发送到你的服务之前（或者在服务的响应发送到客户端之前）调整请求的一种方法。 部署Traefik Traefik的配置可以使用两种方式：静态配置和动态配置\n静态配置：在 Traefik 中定义静态配置选项有三种不同的、互斥的即你只能同时使用一种）方式。 在配置文件中 在命令行参数中 作为环境变量 动态配置：Traefik从提供者处获取其动态配置：无论是编排器、服务注册表还是普通的旧配置文件。 1# 使用Helm的方式进行部署Traefik2.9.x 2[root@Online-Beijing-master1 ~]# helm repo add traefik https://traefik.","tags":["kubernetes","traefik"],"title":"Traekfik基础使用指南","url":"/posts/traefik/","year":"2023"},{"categories":["kubernetes"],"date":1679443200,"headings":[{"anchor":"hostpath","title":"HostPath"},{"anchor":"local-persistentvolume","title":"Local PersistentVolume"},{"anchor":"persistentvolume","title":"PersistentVolume"},{"anchor":"persistentvolumeclaim","title":"PersistentVolumeClaim"},{"anchor":"创建persistentvolume","title":"创建PersistentVolume"},{"anchor":"创建persistentvolumeclaim","title":"创建PersistentVolumeClaim"},{"anchor":"创建一个deployment","title":"创建一个Deployment"},{"anchor":"创建一个local持久卷实例","title":"创建一个Local持久卷实例"},{"anchor":"删除静态管理的持久化存储","title":"删除静态管理的持久化存储"},{"anchor":"它与hostpath有何不同","title":"它与HostPath有何不同？"},{"anchor":"本地存储","title":"本地存储"}],"kind":"page","lang":"en","summary":"前面我们有通过 hostPath 或者 emptyDir 的方式来持久化我们的数据","tags":["kubernetes"],"title":"Kubernetes-本地存储","url":"/posts/localstoage/","year":"2023"},{"date":1678406400,"headings":[],"kind":"term","lang":"en","summary":"","title":"北京","url":"/tags/%E5%8C%97%E4%BA%AC/","year":"2023"},{"date":1678406400,"headings":[],"kind":"term","lang":"en","summary":"","title":"摄影","url":"/tags/%E6%91%84%E5%BD%B1/","year":"2023"},{"categories":["日常摄影"],"date":1678406400,"headings":[],"kind":"page","lang":"en","summary":"本次摄影来自小王-颐和园环游记","tags":["日记","北京","摄影"],"title":"摄影日记-颐和园","url":"/posts/%E9%A2%90%E5%92%8C%E5%9B%AD/","year":"2023"},{"date":1678406400,"headings":[],"kind":"term","lang":"en","summary":"","title":"日常摄影","url":"/categories/%E6%97%A5%E5%B8%B8%E6%91%84%E5%BD%B1/","year":"2023"},{"date":1678233600,"headings":[],"kind":"term","lang":"en","summary":"","title":"Ingress-nginx","url":"/tags/ingress-nginx/","year":"2023"},{"categories":["kubernetes"],"date":1678233600,"headings":[{"anchor":"basic-auth","title":"Basic Auth"},{"anchor":"certmanager-自动-https","title":"CertManager 自动 HTTPS"},{"anchor":"dns-01-校验","title":"DNS-01 校验"},{"anchor":"http-01-校验","title":"HTTP-01 校验"},{"anchor":"ingress的基本使用","title":"Ingress的基本使用"},{"anchor":"url-rewrite","title":"URL Rewrite"},{"anchor":"什么是ingress","title":"什么是Ingress"},{"anchor":"创建todo-app测试暂时废弃","title":"创建Todo-app测试(暂时废弃)"},{"anchor":"创建一个ingress资源对象","title":"创建一个ingress资源对象"},{"anchor":"基于-cookie的canary","title":"基于 Cookie的canary"},{"anchor":"基于-request-header","title":"基于 Request Header"},{"anchor":"基于权重的canary规则","title":"基于权重的Canary规则"},{"anchor":"基于权重的的canary规则","title":"基于权重的的Canary规则"},{"anchor":"基于用户请求的canary规则","title":"基于用户请求的Canary规则"},{"anchor":"安装nginx-ingress-controller","title":"安装NGINX Ingress Controller"},{"anchor":"灰度应用","title":"灰度应用"},{"anchor":"灰度验证","title":"灰度验证"},{"anchor":"自动https","title":"自动HTTPS"},{"anchor":"自签https","title":"自签HTTPS"},{"anchor":"部署cert-manager","title":"部署cert-manager"}],"kind":"page","lang":"en","summary":"什么是Ingress Ingress 是对集群中服务的外部访问进行管理的 API 对象，典型的访问方式是 HTTP。\nIngress 可以提供负载均衡、SSL 终结和基于名称的虚拟托管。\nIngress 公开从集群外部到集群内服务的 HTTP 和 HTTPS 路由。 流量路由由 Ingress 资源上定义的规则控制。\n下面是一个将所有流量都发送到同一 Service 的简单 Ingress 示例：\nIngress 其实就是从 Kuberenets 集群外部访问集群的一个入口，将外部的请求转发到集群内不同的 Service 上，其实就相当于 nginx、haproxy 等负载均衡代理服务器，可能你会觉得我们直接使用 nginx 就实现了，但是只使用 nginx 这种方式有很大缺陷，每次有新服务加入的时候怎么改 Nginx 配置？不可能让我们去手动更改或者滚动更新前端的 Nginx Pod 吧？那我们再加上一个服务发现的工具比如 consul 如何？貌似是可以，对吧？Ingress 实际上就是这样实现的，只是服务发现的功能自己实现了，不需要使用第三方的服务了，然后再加上一个域名规则定义，路由信息的刷新依靠 Ingress Controller 来提供。\nIngress Controller 可以理解为一个监听器，通过不断地监听 kube-apiserver，实时的感知后端 Service、Pod 的变化，当得到这些信息变化后，Ingress Controller 再结合 Ingress 的配置，更新反向代理负载均衡器，达到服务发现的作用。其实这点和服务发现工具 consul、 consul-template 非常类似。\n现在可以供大家使用的 Ingress Controller 有很多，比如 traefik、nginx-controller、Kubernetes Ingress Controller for Kong、HAProxy Ingress controller，当然你也可以自己实现一个 Ingress Controller，现在普遍用得较多的是 traefik 和 nginx-controller，traefik 的性能较 nginx-controller 差，但是配置使用要简单许多，我们这里会重点给大家介绍 nginx-controller 以及 traefik 的使用。","tags":["kubernetes","Ingress-nginx"],"title":"Ingress的简单使用","url":"/posts/ingress/","year":"2023"},{"categories":["kubernetes"],"date":1677369600,"headings":[{"anchor":"coredns的性能优化","title":"CoreDns的性能优化"},{"anchor":"nodelocal-dnscache","title":"NodeLocal DNSCache"},{"anchor":"内核中的dnat","title":"内核中的DNAT"},{"anchor":"动机","title":"动机"},{"anchor":"安装nodelocaldns","title":"安装NodeLocalDNS"},{"anchor":"解决方法","title":"解决方法"},{"anchor":"超时原因","title":"超时原因"}],"kind":"page","lang":"en","summary":"如果在集群规模较大并发较高的情况下我们仍然需要对 DNS 进行优化，典型的就是大家比较熟悉的 CoreDNS 会出现超时5s的情况。","tags":["kubernetes","coredns"],"title":"CacheDNS和DNS缓存","url":"/posts/coredns/","year":"2023"},{"date":1677369600,"headings":[],"kind":"term","lang":"en","summary":"","title":"coredns","url":"/tags/coredns/","year":"2023"},{"date":1677369600,"headings":[],"kind":"term","lang":"en","summary":"","title":"etcd","url":"/tags/etcd/","year":"2023"},{"categories":["kubernetes"],"date":1677369600,"headings":[{"anchor":"为kubeadm创建配置文件","title":"为Kubeadm创建配置文件"},{"anchor":"为每个成员创建证书","title":"为每个成员创建证书"},{"anchor":"使用kubeadm创建一个高可用的etcd集群","title":"使用Kubeadm创建一个高可用的Etcd集群"},{"anchor":"准备开始","title":"准备开始"},{"anchor":"创建etcd的pod清单","title":"创建Etcd的Pod清单"},{"anchor":"复制证书和-kubeadm-配置","title":"复制证书和 kubeadm 配置"},{"anchor":"将kubelet配置为etcd的服务启动管理器","title":"将Kubelet配置为Etcd的服务启动管理器"},{"anchor":"检查etcd的pod是否运行","title":"检查Etcd的Pod是否运行"},{"anchor":"生成证书颁发机构","title":"生成证书颁发机构"},{"anchor":"请检查证书文件是否都存在","title":"请检查证书文件是否都存在"}],"kind":"page","lang":"en","summary":"默认情况下，kubeadm 在每个控制平面节点上运行一个本地 etcd 实例。也可以使用外部的 etcd 集群，并在不同的主机上提供 etcd 实例。 这两种方法的区别在 高可用拓扑的选项 页面中阐述。这个任务将指导你创建一个由三个成员组成的高可用外部 etcd 集群，该集群在创建过程中可被 kubeadm 使用。","tags":["kubernetes","etcd"],"title":"使用Kubeadm创建一个高可用的ETCD集群","url":"/posts/install-etcd-ha/","year":"2023"},{"date":1676332800,"headings":[],"kind":"term","lang":"en","summary":"","title":"configmap","url":"/tags/configmap/","year":"2023"},{"categories":["kubernetes"],"date":1676332800,"headings":[{"anchor":"configmap","title":"ConfigMap"},{"anchor":"kubernetesiodockerconfigjsonhttpkubernetesiodockerconfigjson","title":"kubernetes.io/dockerconfigjson"},{"anchor":"opaque-secret的使用","title":"Opaque Secret的使用"},{"anchor":"secret","title":"Secret"},{"anchor":"secret的使用","title":"Secret的使用"},{"anchor":"serviceaccount","title":"ServiceAccount"},{"anchor":"实现原理","title":"实现原理"},{"anchor":"将configmap当做文件使用","title":"将ConfigMap当做文件使用"},{"anchor":"被挂载的configmap内容会被自动更新","title":"被挂载的ConfigMap内容会被自动更新"},{"anchor":"通过volume挂载","title":"通过Volume挂载"},{"anchor":"通过环境变量挂载secret","title":"通过环境变量挂载Secret"},{"anchor":"通过环境变量的方式使用configmap","title":"通过环境变量的方式使用ConfigMap"}],"kind":"page","lang":"en","summary":"ConfigMap 是一种 API 对象，用来将非机密性的数据保存到键值对中。使用时， Pods 可以将其用作环境变量、命令行参数或者存储卷中的配置文件。","tags":["kubernetes","configmap","secret"],"title":"ConfigMap和Secret的使用","url":"/posts/configmapandservice/","year":"2023"},{"categories":["kubernetes"],"date":1676332800,"headings":[{"anchor":"horizontalpodautoscaler","title":"HorizontalPodAutoscaler"},{"anchor":"horizontalpodautoscaler-是如何工作的","title":"HorizontalPodAutoscaler 是如何工作的"},{"anchor":"metrics-server","title":"Metrics-Server"},{"anchor":"创建一个基于内存的自动扩容","title":"创建一个基于内存的自动扩容"},{"anchor":"创建基于cpu的自动扩容","title":"创建基于CPU的自动扩容"},{"anchor":"聚合-api","title":"聚合 API"},{"anchor":"部署hpa","title":"部署HPA"}],"kind":"page","lang":"en","summary":"在Kubernetes 中HorizontalPodAutoscaler自动更新工作负载资源 （例如 Deployment 或者 StatefulSet）， 目的是自动扩缩工作负载以满足需求。","tags":["kubernetes","HPA"],"title":"HorizontalPodAutoscaler","url":"/posts/horizontalpodautoscaler/","year":"2023"},{"date":1676332800,"headings":[],"kind":"term","lang":"en","summary":"","title":"HPA","url":"/tags/hpa/","year":"2023"},{"date":1676332800,"headings":[],"kind":"term","lang":"en","summary":"","title":"secret","url":"/tags/secret/","year":"2023"},{"date":1675728000,"headings":[],"kind":"term","lang":"en","summary":"","title":"api-server","url":"/tags/api-server/","year":"2023"},{"categories":["kubernetes"],"date":1675728000,"headings":[{"anchor":"api-priority-and-fairness","title":"API Priority and Fairness"},{"anchor":"api-server的限流","title":"API Server的限流"},{"anchor":"binding","title":"Binding"},{"anchor":"flow-schema","title":"Flow Schema"},{"anchor":"prioritylevelconfiguration优先级队列","title":"PriorityLevelConfiguration(优先级队列)"},{"anchor":"rbac和abac","title":"RBAC和ABAC"},{"anchor":"role和clusterrole","title":"Role和ClusterRole"},{"anchor":"useraccount和serviceaccount的区别","title":"UserAccount和ServiceAccount的区别"},{"anchor":"webhook认证用法","title":"WebHook认证用法"},{"anchor":"与权限相关的其他最佳实践","title":"与权限相关的其他最佳实践"},{"anchor":"令牌桶算法","title":"令牌桶算法"},{"anchor":"准入","title":"准入"},{"anchor":"准入控制","title":"准入控制"},{"anchor":"准入控制插件","title":"准入控制插件"},{"anchor":"准入控制插件的演示","title":"准入控制插件的演示"},{"anchor":"授权","title":"授权"},{"anchor":"搭建多租户的kubernetes集群","title":"搭建多租户的kubernetes集群"},{"anchor":"构建符合kubernetes规范的认证服务","title":"构建符合Kubernetes规范的认证服务"},{"anchor":"漏斗算法","title":"漏斗算法"},{"anchor":"规划系统角色","title":"规划系统角色"},{"anchor":"认证插件","title":"认证插件"},{"anchor":"账户组的管理","title":"账户/组的管理"},{"anchor":"限流","title":"限流"},{"anchor":"静态token用法","title":"静态Token用法"},{"anchor":"高可用apiserver","title":"高可用APIServer"}],"kind":"page","lang":"en","summary":"Kubernetes API的每个请求都会经过多阶段的访问控制之后才会被接受,这一阶段包括认证、授权、以及准入控制(Admission Control)等","tags":["kubernetes","api-server"],"title":"Kubernetes中Api-Server简单解读","url":"/posts/api-server/","year":"2023"},{"date":1675382400,"headings":[],"kind":"term","lang":"en","summary":"","title":"dashboard","url":"/tags/dashboard/","year":"2023"},{"categories":["kubernetes"],"date":1675382400,"headings":[{"anchor":"安装部署","title":"安装部署"},{"anchor":"官方webui部署","title":"官方WebUI部署"},{"anchor":"推荐几个其他的webui","title":"推荐几个其他的WebUi"},{"anchor":"访问页面","title":"访问页面"}],"kind":"page","lang":"en","summary":"kubernetes官方dashboard部署方案","tags":["kubernetes","dashboard"],"title":"kubernetes-dashboard","url":"/posts/kubernetes-dashboard/","year":"2023"},{"date":1672531200,"headings":[],"kind":"term","lang":"en","summary":"","title":"天津","url":"/tags/%E5%A4%A9%E6%B4%A5/","year":"2023"},{"categories":["旅行日记"],"date":1672531200,"headings":[{"anchor":"2022终将逝去","title":"2022终将逝去"},{"anchor":"城市夜景","title":"城市夜景"},{"anchor":"我在天津很想你","title":"我在天津很想你"},{"anchor":"看海","title":"看海"},{"anchor":"说一下此行景点","title":"说一下此行景点"}],"kind":"page","lang":"en","summary":"2022的最后一天,和朋友一起坐车去了天津。早上五点起床开始收拾东西了,忙前忙后的发现坐公交已经赶不上了,算了还是打车吧。上高铁的时候真的是太困了…以至于一路上没拍到什么风景。","tags":["日记","天津"],"title":"旅行日记-跨年•天津","url":"/posts/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0-%E8%B7%A8%E5%B9%B4%E5%A4%A9%E6%B4%A5/","year":"2023"},{"categories":["kubernetes"],"date":1672272000,"headings":[{"anchor":"containerd的基础安装和操作","title":"Containerd的基础安装和操作"},{"anchor":"kubernetes12210部署","title":"kubernetes1.22.10部署"},{"anchor":"kubernetes安装","title":"kubernetes安装"},{"anchor":"master主集群加入token过期如何处理","title":"Master主集群加入token过期如何处理"},{"anchor":"使用crictl-image出现warn0000-image-connect-using-default-endpoints","title":"使用crictl image出现WARN[0000] image connect using default endpoints"},{"anchor":"修改sandbox_img","title":"修改sandbox_img"},{"anchor":"修改systemd-cgroup驱动","title":"修改Systemd Cgroup驱动"},{"anchor":"关闭swap分区以及防火墙","title":"关闭swap分区以及防火墙"},{"anchor":"准备主机地址","title":"准备主机地址"},{"anchor":"准备工作","title":"准备工作"},{"anchor":"创建admin配置目录","title":"创建admin配置目录"},{"anchor":"创建集群网络","title":"创建集群网络"},{"anchor":"初始化集群配置信息","title":"初始化集群配置信息"},{"anchor":"加入集群","title":"加入集群"},{"anchor":"启动containerd","title":"启动containerd"},{"anchor":"启动kubelet","title":"启动kubelet"},{"anchor":"安装命令提示","title":"安装命令提示"},{"anchor":"我的服务器配置列表","title":"我的服务器配置列表"},{"anchor":"提一个小问题","title":"提一个小问题"},{"anchor":"生成containerd的配置文件","title":"生成containerd的配置文件"},{"anchor":"设置crictl-查找的容器运行时","title":"设置Crictl 查找的容器运行时"},{"anchor":"通过阿里云镜像源安装","title":"通过阿里云镜像源安装"},{"anchor":"通过阿里云镜像源安装-1","title":"通过阿里云镜像源安装"},{"anchor":"配置ipv4转发","title":"配置IPV4转发"},{"anchor":"问题解决","title":"问题解决"},{"anchor":"需要开放的端口","title":"需要开放的端口"},{"anchor":"额外-设置containerd的私有仓库","title":"(额外) 设置Containerd的私有仓库"},{"anchor":"验证集群","title":"验证集群"}],"kind":"page","lang":"en","summary":"kubeadm版部署kubernetes方案","tags":["kubernetes"],"title":"kubernetes1.22.0单节点集群部署","url":"/posts/install-kubernetes/","year":"2022"},{"categories":["kubernetes"],"date":1672272000,"headings":[{"anchor":"为kube-apiserver创建负载均衡器","title":"为Kube-apiserver创建负载均衡器"},{"anchor":"修改calicoyaml配置","title":"修改Calico.yaml配置"},{"anchor":"利用kubeadm创建高可用集群","title":"利用Kubeadm创建高可用集群"},{"anchor":"参与主机列表","title":"参与主机列表"},{"anchor":"可选项修改kubelet的数据存储目录","title":"(可选项)修改Kubelet的数据存储目录"},{"anchor":"如何剔除一个master","title":"如何剔除一个Master"},{"anchor":"将其他控制平面节点加入集群","title":"将其他控制平面节点加入集群"},{"anchor":"将工作节点加入集群","title":"将工作节点加入集群"},{"anchor":"设置etcd集群证书","title":"设置Etcd集群证书"},{"anchor":"设置第一个控制平面节点","title":"设置第一个控制平面节点"},{"anchor":"运行网络cni插件calico","title":"运行网络CNI插件(Calico)"},{"anchor":"配置master主机节点的hosts文件","title":"配置Master主机节点的Hosts文件"}],"kind":"page","lang":"en","summary":"如何使用kubeadm方案来安装高可用的kubernetes集群","tags":["kubernetes"],"title":"利用Kubeadm进行多Master高可用部署","url":"/posts/install-kubernetes-ha/","year":"2022"},{"categories":["kubernetes"],"date":1665187200,"headings":[{"anchor":"cgroup与kmem机制","title":"cgroup与kmem机制"},{"anchor":"docker与k8s使用kmem","title":"docker与k8s使用kmem"},{"anchor":"keme是什么","title":"keme是什么?"},{"anchor":"kubernetes中cgroup泄漏问题","title":"Kubernetes中Cgroup泄漏问题"},{"anchor":"大概得原理理解","title":"大概得原理理解"},{"anchor":"影响范围","title":"影响范围"},{"anchor":"故障表现","title":"故障表现"},{"anchor":"服务器配置信息","title":"服务器配置信息"},{"anchor":"解决方案","title":"解决方案"},{"anchor":"解决方案2","title":"解决方案2"},{"anchor":"解决方案3","title":"解决方案3"},{"anchor":"解决方案一","title":"解决方案一"},{"anchor":"问题原因1","title":"问题原因1"},{"anchor":"问题原因2","title":"问题原因2"}],"kind":"page","lang":"en","summary":"绝大多数的kubernetes集群都有这个隐患。只不过一般情况下，泄漏得比较慢，还没有表现出来而已。","tags":["kubernetes"],"title":"Kubernetes低版本中内存泄漏问题","url":"/posts/kubernetes-%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/","year":"2022"},{"date":1661731200,"headings":[],"kind":"term","lang":"en","summary":"","title":"ansible","url":"/tags/ansible/","year":"2022"},{"date":1661731200,"headings":[],"kind":"term","lang":"en","summary":"","title":"ansible","url":"/categories/ansible/","year":"2022"},{"categories":["ansible"],"date":1661731200,"headings":[{"anchor":"ansible-changed_when","title":"Ansible-changed_when"},{"anchor":"ansible-handlers","title":"Ansible-Handlers"},{"anchor":"ansible-ignore_errors","title":"Ansible-ignore_errors"},{"anchor":"ansible-include","title":"Ansible-Include"},{"anchor":"ansible-tags","title":"Ansible-Tags"},{"anchor":"ansible-with_items","title":"Ansible-with_items"},{"anchor":"changed_when","title":"changed_when"},{"anchor":"force_handlers","title":"force_handlers"},{"anchor":"使用变量字典循环拷贝文件","title":"使用变量字典循环拷贝文件"},{"anchor":"使用变量字典循环方式批量创建用户","title":"使用变量字典循环方式批量创建用户"},{"anchor":"使用变量的循环写法","title":"使用变量的循环写法"},{"anchor":"多个playbook合成","title":"多个playbook合成"},{"anchor":"执行指定tags标签内容","title":"执行指定Tags标签内容"},{"anchor":"普通写法","title":"普通写法"},{"anchor":"简单应用","title":"简单应用"},{"anchor":"跳过指定标签执行其他内容","title":"跳过指定标签执行其他内容"}],"kind":"page","lang":"en","summary":"主要讲一下ansible当中的几种task方法","tags":["ansible"],"title":"Ansible-任务控制","url":"/posts/ansible-task/","year":"2022"},{"categories":["ansible"],"date":1660521600,"headings":[{"anchor":"ansible怎么定义变量","title":"Ansible怎么定义变量"},{"anchor":"group_vars","title":"group_vars"},{"anchor":"host_vars","title":"host_vars"},{"anchor":"通过playbook中的vars定义变量","title":"通过Playbook中的vars定义变量"},{"anchor":"通过定义变量文件进行使用","title":"通过定义变量文件进行使用"},{"anchor":"通过编辑inventory主机清单进定义","title":"通过编辑inventory主机清单进定义"}],"kind":"page","lang":"en","summary":"主要讲一下ansible当中的几种变量定义方法","tags":["ansible"],"title":"Ansible变量相关内容","url":"/posts/ansible-vrables/","year":"2022"},{"date":1658275200,"headings":[],"kind":"term","lang":"en","summary":"","title":"mysql","url":"/tags/mysql/","year":"2022"},{"date":1658275200,"headings":[],"kind":"term","lang":"en","summary":"","title":"mysql","url":"/categories/mysql/","year":"2022"},{"categories":["mysql"],"date":1658275200,"headings":[{"anchor":"57版本全局读锁排查","title":"5.7版本全局读锁排查"},{"anchor":"autoinclock自增锁","title":"AutoincLock(自增锁)"},{"anchor":"dead-lock死锁","title":"Dead Lock死锁"},{"anchor":"engine层优化","title":"Engine层优化"},{"anchor":"innodb-row-lock行级锁","title":"Innodb Row Lock(行级锁)"},{"anchor":"metadatalock元数据锁","title":"MetaDataLock(元数据锁)"},{"anchor":"mysql三层结构及参数优化","title":"MySQL三层结构及参数优化"},{"anchor":"mysql性能优化-优化思路","title":"MySQL性能优化-优化思路"},{"anchor":"mysql版本选择优化","title":"MySQL版本选择优化"},{"anchor":"server层优化","title":"Server层优化"},{"anchor":"table-lock表级锁","title":"Table Lock(表级锁)"},{"anchor":"优化方向","title":"优化方向"},{"anchor":"全局读锁的排查方法","title":"全局读锁的排查方法"},{"anchor":"全局锁读global-read-lock-grl","title":"全局锁读Global Read Lock (GRL）"},{"anchor":"如果可能存在的是io问题","title":"如果可能存在的是IO问题"},{"anchor":"检测方式","title":"检测方式"},{"anchor":"检测方式-1","title":"检测方式"},{"anchor":"硬件层面优化","title":"硬件层面优化"},{"anchor":"系统层面优化","title":"系统层面优化"},{"anchor":"经典故障案例","title":"经典故障案例"},{"anchor":"连接层优化","title":"连接层优化"}],"kind":"page","lang":"en","summary":"大概的优化思路分为以下几个内容","tags":["mysql"],"title":"MySQL小小优化思路简单版本","url":"/posts/mysql-%E4%BC%98%E5%8C%96/","year":"2022"},{"date":1657756800,"headings":[],"kind":"term","lang":"en","summary":"","title":"docker","url":"/tags/docker/","year":"2022"},{"date":1657756800,"headings":[],"kind":"term","lang":"en","summary":"","title":"docker","url":"/categories/docker/","year":"2022"},{"categories":["docker"],"date":1657756800,"headings":[{"anchor":"docker存储空间不足","title":"Docker存储空间不足"},{"anchor":"docker迁移存储目录","title":"Docker迁移存储目录"},{"anchor":"live-restore的限制","title":"live-restore的限制"},{"anchor":"优雅地重启docker","title":"优雅地重启Docker"},{"anchor":"容器内部中文异常","title":"容器内部中文异常"},{"anchor":"方法一-软连接方式","title":"方法一: 软连接方式"},{"anchor":"方法二-修改docker配置文件","title":"方法二: 修改docker配置文件"},{"anchor":"问题一-no-space-left-on-device","title":"问题一: No space left on device"}],"kind":"page","lang":"en","summary":"说几个docker常见的解决方法和思路","tags":["docker"],"title":"Docker常见的几个问题处理","url":"/posts/docker-qusition/","year":"2022"},{"categories":["ansible"],"date":1648771200,"headings":[{"anchor":"10-playbook核心元素","title":"1.0 PlayBook核心元素"},{"anchor":"101-忽略错误信息","title":"1.0.1 忽略错误信息"},{"anchor":"102-常用选项","title":"1.0.2 常用选项"},{"anchor":"20-handlers和notify","title":"2.0 Handlers和notify"},{"anchor":"30-playbook的tags使用","title":"3.0 PlayBook的tags使用"},{"anchor":"40-playbook中变量的使用","title":"4.0 PlayBook中变量的使用"},{"anchor":"401-通过命令行指定变量","title":"4.0.1 通过命令行指定变量"},{"anchor":"402-在playbook中定义","title":"4.0.2 在playbook中定义"},{"anchor":"403-通过setup模块获取变量","title":"4.0.3 通过setup模块获取变量"},{"anchor":"404-在hosts中定义变量","title":"4.0.4 在hosts中定义变量"},{"anchor":"405-通过文件加载变量","title":"4.0.5 通过文件加载变量"},{"anchor":"50-模板templates","title":"5.0 模板Templates"},{"anchor":"501-when语法","title":"5.0.1 When语法"},{"anchor":"502-with_item","title":"5.0.2 With_item"},{"anchor":"503-for循环","title":"5.0.3 for循环"},{"anchor":"504-if判断","title":"5.0.4 if判断"}],"kind":"page","lang":"en","summary":"主要讲解一些Playbook的简单用法","tags":["ansible"],"title":"Playbook的一些简单使用","url":"/posts/playbook/","year":"2022"},{"date":1647734400,"headings":[],"kind":"term","lang":"en","summary":"","title":"nginx","url":"/tags/nginx/","year":"2022"},{"date":1647734400,"headings":[],"kind":"term","lang":"en","summary":"","title":"nginx","url":"/categories/nginx/","year":"2022"},{"categories":["nginx"],"date":1647734400,"headings":[{"anchor":"启用gzip压缩","title":"启用gzip压缩"},{"anchor":"启用日志访问缓冲区","title":"启用日志访问缓冲区"},{"anchor":"调整缓冲区大小","title":"调整缓冲区大小"},{"anchor":"调整静态文件缓存","title":"调整静态文件缓存"},{"anchor":"配置nginx的work_process","title":"配置nginx的work_process"},{"anchor":"配置work_connections","title":"配置work_connections"},{"anchor":"限制nginx连接的超时","title":"限制nginx连接的超时"}],"kind":"page","lang":"en","summary":"主要讲解nginx具体有那些优化项","tags":["nginx"],"title":"Nginx简单的常规优化","url":"/posts/nginx%E4%BC%98%E5%8C%96/","year":"2022"},{"categories":["docker"],"date":1644710400,"headings":[{"anchor":"cri容器运行时接口","title":"CRI容器运行时接口"},{"anchor":"dockershim","title":"Dockershim"},{"anchor":"oci开放容器标准","title":"OCI开放容器标准"},{"anchor":"先前了解","title":"先前了解"},{"anchor":"参考链接","title":"参考链接"}],"kind":"page","lang":"en","summary":"kubelet中的Docker支持现在已弃用，并将在未来的版本中删除。kubelet使用了一个名为`dockershim`的模块，该模块实现了对Docker的CRI支持，并在Kubernetes社区中发现了维护问题。我们鼓励您评估迁移到一个容器运行时的情况，该容器运行时是CRI（v1alpha1或v1兼容）的完整实现。","tags":["docker"],"title":"什么是dockershim","url":"/posts/docker-shim/","year":"2022"},{"categories":["kubernetes"],"date":1640044800,"headings":[{"anchor":"requests资源限制","title":"requests资源限制"},{"anchor":"影响pod调度的情况","title":"影响Pod调度的情况"},{"anchor":"污点和污点容忍","title":"污点和污点容忍"},{"anchor":"生产环境解决问题办法","title":"生产环境解决问题办法"},{"anchor":"节点亲和性","title":"节点亲和性"},{"anchor":"节点标签的label","title":"节点标签的Label"}],"kind":"page","lang":"en","summary":"此问题引出的是生产环境中所有的资源完全充足,但是会出现更新Pod、删除Pod、新建Pod无法调度的情况。","tags":["kubernetes"],"title":"有关于Kubernetes中影响Pod调度的问题","url":"/posts/%E6%9C%89%E5%85%B3%E5%BD%B1%E5%93%8Dpod%E8%B0%83%E5%BA%A6%E7%9A%84%E9%97%AE%E9%A2%98/","year":"2021"},{"categories":["kubernetes"],"date":1617753600,"headings":[{"anchor":"helm中的elasticsearch可能会存在问题","title":"Helm中的Elasticsearch可能会存在问题"},{"anchor":"上传本地helm","title":"上传本地Helm"},{"anchor":"下载skywalking包","title":"下载Skywalking包"},{"anchor":"准备离线镜像","title":"准备离线镜像"},{"anchor":"在线部署chartmuseum","title":"在线部署chartmuseum"},{"anchor":"添加elasticsearch仓库","title":"添加elasticsearch仓库"},{"anchor":"部署skywalking","title":"部署skywalking"}],"kind":"page","lang":"en","summary":"离线状态的环境下如何去部署skywalking","tags":["kubernetes","skywalking"],"title":"kubernetes-离线部署Skywallking","url":"/posts/kubernetes-skywallking/","year":"2021"},{"date":1617753600,"headings":[],"kind":"term","lang":"en","summary":"","title":"skywalking","url":"/tags/skywalking/","year":"2021"},{"date":1613692800,"headings":[],"kind":"term","lang":"en","summary":"","title":"redis","url":"/tags/redis/","year":"2021"},{"date":1613692800,"headings":[],"kind":"term","lang":"en","summary":"","title":"redis","url":"/categories/redis/","year":"2021"},{"categories":["redis"],"date":1613692800,"headings":[{"anchor":"redis-clusterredis集群简介","title":"Redis Cluster（Redis集群）简介"},{"anchor":"创建目录","title":"创建目录"},{"anchor":"加入集群","title":"加入集群"},{"anchor":"启动集群","title":"启动集群"},{"anchor":"复制配置文件","title":"复制配置文件"},{"anchor":"总结","title":"总结"},{"anchor":"搭建集群","title":"搭建集群"},{"anchor":"故障切换","title":"故障切换"},{"anchor":"编辑配置文件","title":"编辑配置文件"},{"anchor":"连接集群","title":"连接集群"}],"kind":"page","lang":"en","summary":"Redis集群搭建方案","tags":["redis"],"title":"Redis集群搭建","url":"/posts/redis-cluster/","year":"2021"},{"categories":["kubernetes"],"date":1586736000,"headings":[{"anchor":"externalname","title":"ExternalName"},{"anchor":"iptables","title":"iptables"},{"anchor":"ipvs","title":"IPVS"},{"anchor":"kube-proxy","title":"kube-proxy"},{"anchor":"loadbalancer","title":"LoadBalancer"},{"anchor":"nodeport","title":"NodePort"},{"anchor":"service","title":"Service"},{"anchor":"service的简单理解","title":"Service的简单理解"},{"anchor":"三种ip","title":"三种IP"},{"anchor":"优化iptables模式性能","title":"优化iptables模式性能"},{"anchor":"会话亲和性","title":"会话亲和性"},{"anchor":"会话超时","title":"会话超时"},{"anchor":"定义servcie","title":"定义Servcie"},{"anchor":"自定义service","title":"自定义Service"},{"anchor":"获取客户端ip","title":"获取客户端IP"}],"kind":"page","lang":"en","summary":"Service 是一种抽象的对象，它定义了一组 Pod 的逻辑集合和一个用于访问它们的策略，其实这个概念和微服务非常类似。一个 Serivce 下面包含的 Pod 集合是由 Label Selector 来决定的。","tags":["kubernetes"],"title":"kubernetes-Service解读","url":"/posts/kubernetes-service/","year":"2020"},{"categories":["kubernetes"],"date":1586217600,"headings":[{"anchor":"扩容测试","title":"扩容测试"},{"anchor":"简单安装使用","title":"简单安装使用"},{"anchor":"部署mysql","title":"部署mysql"},{"anchor":"部署nacos","title":"部署Nacos"},{"anchor":"部署nfs","title":"部署NFS"},{"anchor":"高级用法","title":"高级用法"}],"kind":"page","lang":"en","summary":"kubernetes持久化部署nacos集群演示","tags":["kubernetes"],"title":"kubernetes-部署NACOS","url":"/posts/kubernetes-nacos/","year":"2020"},{"categories":["kubernetes"],"date":1584144000,"headings":[{"anchor":"limit-range","title":"Limit-range"},{"anchor":"predicates策略","title":"Predicates策略"},{"anchor":"priority策略","title":"Priority策略"},{"anchor":"生产环境需要考虑的问题","title":"生产环境需要考虑的问题"},{"anchor":"调度流程","title":"调度流程"},{"anchor":"调度阶段","title":"调度阶段"},{"anchor":"资源需求","title":"资源需求"}],"kind":"page","lang":"en","summary":"kube-scheduler 是 kubernetes 的核心组件之一","tags":["kubernetes","调度原理"],"title":"kubernetes-Scheduler简单详解","url":"/posts/scheduler/","year":"2020"},{"date":1584144000,"headings":[],"kind":"term","lang":"en","summary":"","title":"调度原理","url":"/tags/%E8%B0%83%E5%BA%A6%E5%8E%9F%E7%90%86/","year":"2020"},{"date":1551312000,"headings":[{"anchor":"一些推荐项目","title":"一些推荐项目"},{"anchor":"友情链接","title":"友情链接"},{"anchor":"我的设备","title":"我的设备"}],"kind":"page","lang":"en","summary":" 一个运维开发工程师在读中 擅长 Ai、Fw、Fl、Br、Ae、Pr、Id、Ps 等软件的安装与卸载，精通 CSS、JavaScript、PHP、ASP、C、C++、C#、Java、Ruby、Perl、Lisp、Python、Objective-C、ActionScript、Pascal 等单词的拼写，熟悉 Windows、Linux、OS X、Android、iOS、WP8 等系统的开关机。 摄影社区: 一个记录个人摄影的小站 我的设备 💻: MacBookPro 2020 13寸 挖土机限定(迟早更换版) 📱: iPhone12Pro + Galaxy S23 Ultra + 古董iPhone6s 开发工具:Goland + LiteIDE 一些推荐项目 BootCDN: 本站全站采用的CSS、JS稳定、快速、免费的前端开源项目 CDN 加速服务 kubernetes: 别问…问就是一辈子都在钻研它的路上 友情链接 1name: 人间只是春 2link: https://blog.mletter.cn 3avatar: https://bj.bcebos.com/baidu-rmb-video-cover-1/bd67cdcdcb45468305f2bbb15ff17fa8.jpeg ","title":"关于这里","url":"/about/","year":"2019"},{"date":-62135596800,"headings":[],"kind":"page","lang":"en","summary":"","title":"Archives","url":"/archives/","year":"0001"},{"date":-62135596800,"headings":[],"kind":"taxonomy","lang":"en","summary":"","title":"Authors","url":"/authors/","year":"0001"},{"date":-62135596800,"headings":[],"kind":"taxonomy","lang":"en","summary":"","title":"Series","url":"/series/","year":"0001"},{"date":-62135596800,"headings":[{"anchor":"友情链接排名不分先后","title":"友情链接排名不分先后"}],"kind":"page","lang":"en","summary":"友情链接排名不分先后 米开朗几基扬 老麦的书房 DQY\u0026WYの小窝 提剑追梦 上官云琛 任平生 鹿小鼠笔记本 十二的编程笔记","title":"我的互联网好友(●'◡'●)ﾉ*\\(๑•₃•๑)*","url":"/friends/","year":"0001"}]