<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on</title><link>https://blog.mletter.cn/tags/docker/</link><description>Recent content in docker on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 14 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mletter.cn/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker常见的几个问题处理</title><link>https://blog.mletter.cn/posts/docker-qusition/</link><pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.mletter.cn/posts/docker-qusition/</guid><description>Docker迁移存储目录 问题起因 由于公司最开始的服务器在/var/lib/docker没有挂载存储,容量只有40G,导致服务器磁盘用满。现将原有的Docker目录数据进行迁移。
请各位Kubernetes用户不要操作,因为容器编排不支持!
1# 启动容器发现如下报错 2ERROR：cannot create temporary directory! 方法一: 软连接方式 1# 1.停止docker服务 2systemctl stop docker 3 4# 2.开始迁移目录 5mv /var/lib/docker /data/ 6 7# 使用cp命令也可以 8cp -arv /var/lib/docker /data/docker 9 10# 3.添加软链接 11ln -s /data/docker /var/lib/docker 12 13# 4.启动docker服务 14systemctl start docker 方法二: 修改docker配置文件 注意: 这是一个旧版本docker修改存储目录的方式.
1vim /etc/docker/daemon.json 2{ 3 &amp;#34;graph&amp;#34;: [ &amp;#34;/data/docker/&amp;#34; ] # 更改docker镜像的存储目录 4} 新版本修改存储目录方式
1# 请找到你的docker.service存放位置 2vim /usr/lib/systemd/system/docker.service 通过加入--data-root=/data/docker进行修改默认的数据存储位置
1[Unit] 2Description=Docker Application Container Engine 3Documentation=https://docs.docker.com 4After=network-online.</description></item><item><title>什么是dockershim</title><link>https://blog.mletter.cn/posts/docker-shim/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.mletter.cn/posts/docker-shim/</guid><description>先前了解 参考链接 Githubissue kubelet中的Docker支持现在已弃用，并将在未来的版本中删除。kubelet使用了一个名为dockershim的模块，该模块实现了对Docker的CRI支持，并在Kubernetes社区中发现了维护问题。我们鼓励您评估迁移到一个容器运行时的情况，该容器运行时是CRI（v1alpha1或v1兼容）的完整实现。
也就是说,在后续的Kubernetes1.20x版本以后会删除dockershim组件,但是由于目前Docker的使用用户众多,中间必然会有替换的一个过渡期,所以大家可以更多的关注一下其他的Container Runtime。 例如我们的Podman、Containerd、cri-o等其他容器运行时来运行kubernetes。
下面我们就具体来看看Kubernetes所提到的弃用dockershim到底是什么东西.
CRI容器运行时接口 参考链接 CRI：容器运行时接口 container runtime interface，CRI 中定义了容器和镜像两个接口，实现了这两个接口目前主流的是：CRI-O、Containerd。（目前 PCI 产品使用的即为 Containerd）。 CRI接口的具体用处就在于
对容器操作的接口，包括容器的创建、启动和停止.即create、stop等操作。 对镜像的操作，下载、删除镜像等. 即pull、rmi等操作。 podsandbox OCI开放容器标准 OCI：开放容器标准 open container initiative，OCI 中定义了两个标准：容器运行时标准 和 容器镜像标准，实现了这一标准的主流是：runc（也即我们日常说的 Docker）、Kata-Container。 OCI的作用在于
ImageSpec(容器标准包) 文件系统：以 layer 保存的文件系统，每个 layer 保存了和上层之间变化的部分，layer 应该保存哪些文件，怎么表示增加、修改和删除的文件等 config 文件：保存了文件系统的层级信息（每个层级的 hash 值，以及历史信息），以及容器运行时需要的一些信息（比如环境变量、工作目录、命令参数、mount 列表），指定了镜像在某个特定平台和系统的配置。比较接近我们使用 docker inspect &amp;lt;image_id&amp;gt; 看到的内容 manifest 文件：镜像的 config 文件索引，有哪些 layer，额外的 annotation 信息，manifest 文件中保存了很多和当前平台有关的信息 index 文件：可选的文件，指向不同平台的 manifest 文件，这个文件能保证一个镜像可以跨平台使用，每个平台拥有不同的 manifest 文件，使用 index 作为索引 2.runtimeSpec:
ociVersion(string, REQUIRED):是该州遵守的开放容器倡议运行时规范的版本。 id： 容器的 ID。这在此主机上的所有容器中必须是唯一的。不要求它在主机之间是唯一的。 status(string, REQUIRED): 加冕时容器的几个状态 11.</description></item></channel></rss>