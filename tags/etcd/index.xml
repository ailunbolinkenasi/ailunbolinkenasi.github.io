<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<<<<<<< HEAD
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Etcd on Heartbeat Diary</title>
    <link>https://blog.mletter.cn/tags/etcd/</link>
    <description>Recent content in Etcd on Heartbeat Diary</description>
    <generator>Hugo -- 0.146.5</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 26 Feb 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.mletter.cn/tags/etcd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Kubeadm创建一个高可用的ETCD集群</title>
      <link>https://blog.mletter.cn/tech/kubernetes/install-etcd-ha/</link>
      <pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.mletter.cn/tech/kubernetes/install-etcd-ha/</guid>
      <description>默认情况下，kubeadm 在每个控制平面节点上运行一个本地 etcd 实例。也可以使用外部的 etcd 集群，并在不同的主机上提供 etcd 实例。 这两种方法的区别在 高可用拓扑的选项 页面中阐述。这个任务将指导你创建一个由三个成员组成的高可用外部 etcd 集群，该集群在创建过程中可被 kubeadm 使用。</description>
      <content:encoded><![CDATA[<h2 id="使用kubeadm创建一个高可用的etcd集群">使用Kubeadm创建一个高可用的Etcd集群</h2>
<p>默认情况下，kubeadm 在每个控制平面节点上运行一个本地 etcd 实例。也可以使用外部的 etcd 集群，并在不同的主机上提供 etcd 实例。 这两种方法的区别在 高可用拓扑的选项 页面中阐述。</p>
<p>这个任务将指导你创建一个由三个成员组成的高可用外部 etcd 集群，该集群在创建过程中可被 kubeadm 使用。</p>
<h2 id="准备开始">准备开始</h2>
<ul>
<li>三个可以通过 2379 和 2380 端口相互通信的主机。本文档使用这些作为默认端口。不过，它们可以通过 kubeadm 的配置文件进行自定义。</li>
<li>每个主机必须安装 systemd 和 bash 兼容的 shell。</li>
<li>每台主机必须安装<code>有容器运行时</code>、<code>kubelet</code> 和 <code>kubeadm</code></li>
<li>每个主机都应该能够访问 Kubernetes 容器镜像仓库 (<a href="http://registry.k8s.io/">registry.k8s.io</a>)， 或者使用 kubeadm config images list/pull 列出/拉取所需的 etcd 镜像。 本指南将把 etcd 实例设置为由 kubelet 管理的静态 Pod。</li>
<li>一些可以用来在主机间复制文件的基础设施。例如 ssh 和 scp 就可以满足需求。</li>
</ul>
<blockquote>
<p>本次容器运行时采用<code>Containerd</code>作为Runtime</p></blockquote>
<h3 id="将kubelet配置为etcd的服务启动管理器">将Kubelet配置为Etcd的服务启动管理器</h3>
<blockquote>
<p>你必须在要运行 etcd 的所有主机上执行此操作。</p></blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF &gt; /usr/lib/systemd/system/kubelet.service.d/20-etcd-service-manager.conf 
</span></span></span><span class="line"><span class="cl"><span class="s">[Service]
</span></span></span><span class="line"><span class="cl"><span class="s">ExecStart=
</span></span></span><span class="line"><span class="cl"><span class="s">ExecStart=/usr/bin/kubelet --address=127.0.0.1 --pod-manifest-path=/etc/kubernetes/manifests --cgroup-driver=systemd  --container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock
</span></span></span><span class="line"><span class="cl"><span class="s">Restart=always
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></div><p>启动kubelet</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">systemctl daemon-reload
</span></span><span class="line"><span class="cl">systemctl restart kubelet
</span></span></code></pre></div><blockquote>
<p>注意: 请执行完毕后务必确保<code>kubelet</code>处于<code>running</code>状态。</p></blockquote>
<h3 id="为kubeadm创建配置文件">为Kubeadm创建配置文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 使用你的主机 IP 替换 HOST0、HOST1 和 HOST2 的 IP 地址</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">HOST0</span><span class="o">=</span>10.1.6.48
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">HOST1</span><span class="o">=</span>10.1.6.24
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">HOST2</span><span class="o">=</span>10.1.6.45
</span></span><span class="line"><span class="cl"><span class="c1"># 使用你的主机名更新 NAME0、NAME1 和 NAME2</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">NAME0</span><span class="o">=</span><span class="s2">&#34;containerd-master1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">NAME1</span><span class="o">=</span><span class="s2">&#34;containerd-master2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">NAME2</span><span class="o">=</span><span class="s2">&#34;containerd-master3&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 创建临时目录来存储将被分发到其它主机上的文件</span>
</span></span><span class="line"><span class="cl">mkdir -p /tmp/<span class="si">${</span><span class="nv">HOST0</span><span class="si">}</span>/ /tmp/<span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span>/ /tmp/<span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span>/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">HOSTS</span><span class="o">=(</span><span class="si">${</span><span class="nv">HOST0</span><span class="si">}</span> <span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span> <span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">NAMES</span><span class="o">=(</span><span class="si">${</span><span class="nv">NAME0</span><span class="si">}</span> <span class="si">${</span><span class="nv">NAME1</span><span class="si">}</span> <span class="si">${</span><span class="nv">NAME2</span><span class="si">}</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> i in <span class="s2">&#34;</span><span class="si">${</span><span class="p">!HOSTS[@]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl"><span class="nv">HOST</span><span class="o">=</span><span class="si">${</span><span class="nv">HOSTS</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="si">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">NAME</span><span class="o">=</span><span class="si">${</span><span class="nv">NAMES</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF &gt; /tmp/${HOST}/kubeadmcfg.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: &#34;kubeadm.k8s.io/v1beta3&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">kind: InitConfiguration
</span></span></span><span class="line"><span class="cl"><span class="s">nodeRegistration:
</span></span></span><span class="line"><span class="cl"><span class="s">    name: ${NAME}
</span></span></span><span class="line"><span class="cl"><span class="s">localAPIEndpoint:
</span></span></span><span class="line"><span class="cl"><span class="s">    advertiseAddress: ${HOST}
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: &#34;kubeadm.k8s.io/v1beta3&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ClusterConfiguration
</span></span></span><span class="line"><span class="cl"><span class="s">etcd:
</span></span></span><span class="line"><span class="cl"><span class="s">    local:
</span></span></span><span class="line"><span class="cl"><span class="s">        dataDir: /var/lib/etcds
</span></span></span><span class="line"><span class="cl"><span class="s">        serverCertSANs:
</span></span></span><span class="line"><span class="cl"><span class="s">        - &#34;${HOST}&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">        peerCertSANs:
</span></span></span><span class="line"><span class="cl"><span class="s">        - &#34;${HOST}&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">        extraArgs:
</span></span></span><span class="line"><span class="cl"><span class="s">            initial-cluster: ${NAMES[0]}=https://${HOSTS[0]}:2380,${NAMES[1]}=https://${HOSTS[1]}:2380,${NAMES[2]}=https://${HOSTS[2]}:2380
</span></span></span><span class="line"><span class="cl"><span class="s">            initial-cluster-state: new
</span></span></span><span class="line"><span class="cl"><span class="s">            name: ${NAME}
</span></span></span><span class="line"><span class="cl"><span class="s">            listen-peer-urls: https://${HOST}:2380
</span></span></span><span class="line"><span class="cl"><span class="s">            listen-client-urls: https://${HOST}:2379
</span></span></span><span class="line"><span class="cl"><span class="s">            advertise-client-urls: https://${HOST}:2379
</span></span></span><span class="line"><span class="cl"><span class="s">            initial-advertise-peer-urls: https://${HOST}:2380
</span></span></span><span class="line"><span class="cl"><span class="s">imageRepository: registry.aliyuncs.com/google_containers
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span></code></pre></div><h3 id="生成证书颁发机构">生成证书颁发机构</h3>
<p>如果你还没有 CA，则在 $HOST0（你为 kubeadm 生成配置文件的位置）上运行此命令。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">kubeadm init phase certs etcd-ca
</span></span></code></pre></div><ul>
<li>这一操作将会生成
<ul>
<li><code>/etc/kubernetes/pki/etcd/ca.crt</code></li>
<li><code>/etc/kubernetes/pki/etcd/ca.key</code></li>
</ul>
</li>
</ul>
<h3 id="为每个成员创建证书">为每个成员创建证书</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">kubeadm init phase certs etcd-server --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs etcd-peer --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs etcd-healthcheck-client --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs apiserver-etcd-client --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">cp -R /etc/kubernetes/pki /tmp/<span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span>/
</span></span><span class="line"><span class="cl"><span class="c1"># 清理不可重复使用的证书</span>
</span></span><span class="line"><span class="cl">find /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -delete
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubeadm init phase certs etcd-server --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs etcd-peer --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs etcd-healthcheck-client --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs apiserver-etcd-client --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">cp -R /etc/kubernetes/pki /tmp/<span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span>/
</span></span><span class="line"><span class="cl">find /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -delete
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># HOST0不需要进行移动</span>
</span></span><span class="line"><span class="cl">kubeadm init phase certs etcd-server --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST0</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs etcd-peer --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST0</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs etcd-healthcheck-client --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST0</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span><span class="line"><span class="cl">kubeadm init phase certs apiserver-etcd-client --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST0</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span></code></pre></div><h3 id="复制证书和-kubeadm-配置">复制证书和 kubeadm 配置</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">scp -r /tmp/<span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span>/* root@<span class="si">${</span><span class="nv">HOST1</span><span class="si">}</span>:
</span></span><span class="line"><span class="cl">scp -r /tmp/<span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span>/* root@<span class="si">${</span><span class="nv">HOST2</span><span class="si">}</span>:
</span></span><span class="line"><span class="cl">chown -R root:root pki/
</span></span><span class="line"><span class="cl">mv pki /etc/kubernetes/
</span></span></code></pre></div><h3 id="请检查证书文件是否都存在">请检查证书文件是否都存在</h3>
<p>检查<code>$HOST0</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@containerd-master1 ~<span class="o">]</span><span class="c1"># tree /etc/kubernetes/pki/</span>
</span></span><span class="line"><span class="cl">/etc/kubernetes/pki/
</span></span><span class="line"><span class="cl">├── apiserver-etcd-client.crt
</span></span><span class="line"><span class="cl">├── apiserver-etcd-client.key
</span></span><span class="line"><span class="cl">└── etcd
</span></span><span class="line"><span class="cl">    ├── ca.crt
</span></span><span class="line"><span class="cl">    ├── ca.key
</span></span><span class="line"><span class="cl">    ├── healthcheck-client.crt
</span></span><span class="line"><span class="cl">    ├── healthcheck-client.key
</span></span><span class="line"><span class="cl">    ├── peer.crt
</span></span><span class="line"><span class="cl">    ├── peer.key
</span></span><span class="line"><span class="cl">    ├── server.crt
</span></span><span class="line"><span class="cl">    └── server.key
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">1</span> directory, <span class="m">10</span> files
</span></span></code></pre></div><p>检查<code>$HOST1</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@containerd-master2 ~<span class="o">]</span><span class="c1"># tree /etc/kubernetes/pki/</span>
</span></span><span class="line"><span class="cl">/etc/kubernetes/pki/
</span></span><span class="line"><span class="cl">├── apiserver-etcd-client.crt
</span></span><span class="line"><span class="cl">├── apiserver-etcd-client.key
</span></span><span class="line"><span class="cl">└── etcd
</span></span><span class="line"><span class="cl">    ├── ca.crt
</span></span><span class="line"><span class="cl">    ├── healthcheck-client.crt
</span></span><span class="line"><span class="cl">    ├── healthcheck-client.key
</span></span><span class="line"><span class="cl">    ├── peer.crt
</span></span><span class="line"><span class="cl">    ├── peer.key
</span></span><span class="line"><span class="cl">    ├── server.crt
</span></span><span class="line"><span class="cl">    └── server.key
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">1</span> directory, <span class="m">9</span> files
</span></span></code></pre></div><p>检查<code>$HOST2</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@containerd-master3 ~<span class="o">]</span><span class="c1"># tree /etc/kubernetes/pki/</span>
</span></span><span class="line"><span class="cl">/etc/kubernetes/pki/
</span></span><span class="line"><span class="cl">├── apiserver-etcd-client.crt
</span></span><span class="line"><span class="cl">├── apiserver-etcd-client.key
</span></span><span class="line"><span class="cl">└── etcd
</span></span><span class="line"><span class="cl">    ├── ca.crt
</span></span><span class="line"><span class="cl">    ├── healthcheck-client.crt
</span></span><span class="line"><span class="cl">    ├── healthcheck-client.key
</span></span><span class="line"><span class="cl">    ├── peer.crt
</span></span><span class="line"><span class="cl">    ├── peer.key
</span></span><span class="line"><span class="cl">    ├── server.crt
</span></span><span class="line"><span class="cl">    └── server.key
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">1</span> directory, <span class="m">9</span> files
</span></span></code></pre></div><h3 id="创建etcd的pod清单">创建Etcd的Pod清单</h3>
<p>请在<code>$HOST0</code>进行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">kubeadm init phase etcd <span class="nb">local</span> --config<span class="o">=</span>/tmp/<span class="si">${</span><span class="nv">HOST0</span><span class="si">}</span>/kubeadmcfg.yaml
</span></span></code></pre></div><p>请在<code>$HOST1</code>进行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">kubeadm init phase etcd <span class="nb">local</span> --config<span class="o">=</span><span class="nv">$HOME</span>/kubeadmcfg.yaml
</span></span></code></pre></div><p>请在<code>$HOST2</code>进行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">kubeadm init phase etcd <span class="nb">local</span> --config<span class="o">=</span><span class="nv">$HOME</span>/kubeadmcfg.yaml
</span></span></code></pre></div><h3 id="检查etcd的pod是否运行">检查Etcd的Pod是否运行</h3>
<ul>
<li>三台Etcd主机全部使用<code>crictl ps -a </code>进行查看EtcdPod是否处于<code>running</code>状态</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@containerd-master1 ~<span class="o">]</span><span class="c1"># crictl ps -a</span>
</span></span><span class="line"><span class="cl">CONTAINER           IMAGE               CREATED             STATE               NAME                ATTEMPT             POD ID              POD
</span></span><span class="line"><span class="cl">0a183925d2542       <span class="m">0048118155842</span>       <span class="m">52</span> seconds ago      Running     
</span></span></code></pre></div>]]></content:encoded>
    </item>
  </channel>
=======
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Etcd on 太阳可以是蓝色</title>
        <link>https://blog.mletter.cn/tags/etcd/</link>
        <description>Recent content in Etcd on 太阳可以是蓝色</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>Live and learn. 🌱</copyright>
        <lastBuildDate>Sun, 26 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mletter.cn/tags/etcd/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>使用Kubeadm创建一个高可用的ETCD集群</title>
        <link>https://blog.mletter.cn/tech/kubernetes/install-etcd-ha/</link>
        <pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate>
        
        <guid>https://blog.mletter.cn/tech/kubernetes/install-etcd-ha/</guid>
        <description>&lt;img src="https://img.linux.net.cn/data/attachment/album/201501/29/141718izklanww82qm888k.png" alt="Featured image of post 使用Kubeadm创建一个高可用的ETCD集群" /&gt;&lt;h2 id=&#34;使用kubeadm创建一个高可用的etcd集群&#34;&gt;&lt;/h&gt;使用Kubeadm创建一个高可用的Etcd集群
&lt;/h2&gt;&lt;p&gt;默认情况下，kubeadm 在每个控制平面节点上运行一个本地 etcd 实例。也可以使用外部的 etcd 集群，并在不同的主机上提供 etcd 实例。 这两种方法的区别在 高可用拓扑的选项 页面中阐述。&lt;/p&gt;
&lt;p&gt;这个任务将指导你创建一个由三个成员组成的高可用外部 etcd 集群，该集群在创建过程中可被 kubeadm 使用。&lt;/p&gt;
&lt;h2 id=&#34;准备开始&#34;&gt;&lt;/h&gt;准备开始
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;三个可以通过 2379 和 2380 端口相互通信的主机。本文档使用这些作为默认端口。不过，它们可以通过 kubeadm 的配置文件进行自定义。&lt;/li&gt;
&lt;li&gt;每个主机必须安装 systemd 和 bash 兼容的 shell。&lt;/li&gt;
&lt;li&gt;每台主机必须安装&lt;code&gt;有容器运行时&lt;/code&gt;、&lt;code&gt;kubelet&lt;/code&gt; 和 &lt;code&gt;kubeadm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;每个主机都应该能够访问 Kubernetes 容器镜像仓库 (&lt;a class=&#34;link&#34; href=&#34;http://registry.k8s.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;registry.k8s.io&lt;/a&gt;)， 或者使用 kubeadm config images list/pull 列出/拉取所需的 etcd 镜像。 本指南将把 etcd 实例设置为由 kubelet 管理的静态 Pod。&lt;/li&gt;
&lt;li&gt;一些可以用来在主机间复制文件的基础设施。例如 ssh 和 scp 就可以满足需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;本次容器运行时采用&lt;code&gt;Containerd&lt;/code&gt;作为Runtime&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;将kubelet配置为etcd的服务启动管理器&#34;&gt;&lt;/h&gt;将Kubelet配置为Etcd的服务启动管理器
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;你必须在要运行 etcd 的所有主机上执行此操作。&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; EOF &amp;gt; /usr/lib/systemd/system/kubelet.service.d/20-etcd-service-manager.conf 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[Service]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;ExecStart=
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;ExecStart=/usr/bin/kubelet --address=127.0.0.1 --pod-manifest-path=/etc/kubernetes/manifests --cgroup-driver=systemd  --container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;Restart=always
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动kubelet&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;systemctl restart kubelet
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注意: 请执行完毕后务必确保&lt;code&gt;kubelet&lt;/code&gt;处于&lt;code&gt;running&lt;/code&gt;状态。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;为kubeadm创建配置文件&#34;&gt;&lt;/h&gt;为Kubeadm创建配置文件
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 使用你的主机 IP 替换 HOST0、HOST1 和 HOST2 的 IP 地址&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HOST0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;10.1.6.48
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;10.1.6.24
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;10.1.6.45
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 使用你的主机名更新 NAME0、NAME1 和 NAME2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;NAME0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;containerd-master1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;NAME1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;containerd-master2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;NAME2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;containerd-master3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 创建临时目录来存储将被分发到其它主机上的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir -p /tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/ /tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/ /tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;HOSTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;NAMES&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;NAME0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;NAME1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;NAME2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;!HOSTS[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;HOST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOSTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;NAMES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; EOF &amp;gt; /tmp/${HOST}/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;apiVersion: &amp;#34;kubeadm.k8s.io/v1beta3&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;kind: InitConfiguration
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;nodeRegistration:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    name: ${NAME}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;localAPIEndpoint:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    advertiseAddress: ${HOST}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;apiVersion: &amp;#34;kubeadm.k8s.io/v1beta3&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;kind: ClusterConfiguration
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;etcd:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    local:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        dataDir: /var/lib/etcds
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        serverCertSANs:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        - &amp;#34;${HOST}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        peerCertSANs:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        - &amp;#34;${HOST}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        extraArgs:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            initial-cluster: ${NAMES[0]}=https://${HOSTS[0]}:2380,${NAMES[1]}=https://${HOSTS[1]}:2380,${NAMES[2]}=https://${HOSTS[2]}:2380
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            initial-cluster-state: new
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            name: ${NAME}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            listen-peer-urls: https://${HOST}:2380
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            listen-client-urls: https://${HOST}:2379
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            advertise-client-urls: https://${HOST}:2379
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            initial-advertise-peer-urls: https://${HOST}:2380
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;imageRepository: registry.aliyuncs.com/google_containers
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;生成证书颁发机构&#34;&gt;&lt;/h&gt;生成证书颁发机构
&lt;/h3&gt;&lt;p&gt;如果你还没有 CA，则在 $HOST0（你为 kubeadm 生成配置文件的位置）上运行此命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-ca
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;这一操作将会生成
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/kubernetes/pki/etcd/ca.crt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/kubernetes/pki/etcd/ca.key&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;为每个成员创建证书&#34;&gt;&lt;/h&gt;为每个成员创建证书
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-server --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-peer --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-healthcheck-client --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs apiserver-etcd-client --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp -R /etc/kubernetes/pki /tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 清理不可重复使用的证书&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -delete
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-server --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-peer --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-healthcheck-client --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs apiserver-etcd-client --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp -R /etc/kubernetes/pki /tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -delete
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# HOST0不需要进行移动&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-server --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-peer --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs etcd-healthcheck-client --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase certs apiserver-etcd-client --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;复制证书和-kubeadm-配置&#34;&gt;&lt;/h&gt;复制证书和 kubeadm 配置
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scp -r /tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/* root@&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scp -r /tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/* root@&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chown -R root:root pki/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv pki /etc/kubernetes/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;请检查证书文件是否都存在&#34;&gt;&lt;/h&gt;请检查证书文件是否都存在
&lt;/h3&gt;&lt;p&gt;检查&lt;code&gt;$HOST0&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@containerd-master1 ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# tree /etc/kubernetes/pki/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/kubernetes/pki/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── apiserver-etcd-client.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── apiserver-etcd-client.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── etcd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── ca.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── ca.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── healthcheck-client.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── healthcheck-client.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── peer.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── peer.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── server.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    └── server.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; directory, &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查&lt;code&gt;$HOST1&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@containerd-master2 ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# tree /etc/kubernetes/pki/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/kubernetes/pki/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── apiserver-etcd-client.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── apiserver-etcd-client.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── etcd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── ca.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── healthcheck-client.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── healthcheck-client.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── peer.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── peer.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── server.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    └── server.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; directory, &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt; files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查&lt;code&gt;$HOST2&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@containerd-master3 ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# tree /etc/kubernetes/pki/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/kubernetes/pki/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── apiserver-etcd-client.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── apiserver-etcd-client.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── etcd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── ca.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── healthcheck-client.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── healthcheck-client.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── peer.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── peer.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── server.crt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    └── server.key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; directory, &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt; files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建etcd的pod清单&#34;&gt;&lt;/h&gt;创建Etcd的Pod清单
&lt;/h3&gt;&lt;p&gt;请在&lt;code&gt;$HOST0&lt;/code&gt;进行执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase etcd &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOST0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请在&lt;code&gt;$HOST1&lt;/code&gt;进行执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase etcd &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请在&lt;code&gt;$HOST2&lt;/code&gt;进行执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubeadm init phase etcd &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/kubeadmcfg.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;检查etcd的pod是否运行&#34;&gt;&lt;/h&gt;检查Etcd的Pod是否运行
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;三台Etcd主机全部使用&lt;code&gt;crictl ps -a &lt;/code&gt;进行查看EtcdPod是否处于&lt;code&gt;running&lt;/code&gt;状态&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@containerd-master1 ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# crictl ps -a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CONTAINER           IMAGE               CREATED             STATE               NAME                ATTEMPT             POD ID              POD
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0a183925d2542       &lt;span class=&#34;m&#34;&gt;0048118155842&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;52&lt;/span&gt; seconds ago      Running     
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
>>>>>>> e6c11e7684b5a835a7809ddc8609bc9f39cdf2c5
</rss>
